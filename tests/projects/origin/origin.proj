<project target_env="C++"><configuration><build-option name="CC">g++</build-option><build-option name="LIBS" /><build-option name="CFLAGS">-O0 -g</build-option><head-code>
int identity(int i) {
	return i;
}</head-code></configuration><net id="101" name="Main" net-type="main"><edge from_item="103" id="104" inscription="x@0" inscription_x="-144.0" inscription_y="-55.0" to_item="102" /><edge from_item="105" id="106" inscription="x" inscription_x="-283.0" inscription_y="-54.0" to_item="103" /><edge from_item="102" id="109" inscription="[origin] x" inscription_x="-53.0" inscription_y="-8.0" to_item="108" /><edge from_item="108" id="111" inscription="identity(x_origin)" inscription_x="-43.0" inscription_y="70.0" to_item="110" /><edge from_item="114" id="115" inscription="0" inscription_x="-262.0" inscription_y="3.0" to_item="103" /><edge from_item="103" id="119" inscription="x@0" inscription_x="-147.0" inscription_y="-101.0" to_item="118"><point x="-108" y="-103" /></edge><edge from_item="118" id="121" inscription="[bulk, origin, guard(size == 6) ] tokens" inscription_x="100.0" inscription_y="-64.0" to_item="120" /><edge from_item="110" id="122" inscription="[guard(size % 6 == 0)]" inscription_x="114.0" inscription_y="107.0" to_item="120"><point x="294" y="121" /></edge><edge from_item="120" id="125" inscription="0@0" inscription_x="340.0" inscription_y="147.0" to_item="114"><point x="401" y="-88" /><point x="399" y="168" /><point x="-274" y="159" /></edge><edge from_item="120" id="126" inscription="0@1" inscription_x="342.0" inscription_y="205.0" to_item="114"><point x="450" y="-107" /><point x="448" y="194" /><point x="-303" y="191" /></edge><edge from_item="120" id="127" inscription="0@2" inscription_x="343.0" inscription_y="258.0" to_item="114"><point x="503" y="-152" /><point x="497" y="248" /><point x="-353" y="224" /></edge><edge from_item="108" id="116" inscription="0@identity(x_origin)" inscription_x="-208.0" inscription_y="29.0" to_item="114" /><place id="102" init_string="" name="" place_type="std::string" radius="20" sx="0" sy="0" x="-91" y="-46" /><place id="105" init_string="" name="" place_type="std::string" radius="20" sx="0" sy="0" x="-339" y="-45"><code>	std::stringstream s;
	s &lt;&lt; ctx.process_id();
	place.add(s.str());
	place.add(s.str());
</code></place><place id="110" init_string="" name="" place_type="int" radius="20" sx="0" sy="0" x="-92" y="118" /><place id="114" init_string="" name="" place_type="int" radius="20" sx="0" sy="0" x="-310" y="53" /><place id="118" init_string="[&quot;0&quot;; &quot;0&quot;]" name="" place_type="std::string" radius="20" sx="0" sy="0" x="2" y="-101"><code>	for (int i = 0; i &lt; 4; i++) {
		place.add("0");
	}
</code></place><transition guard="" id="103" name="" sx="70" sy="35" x="-214" y="-45"><code>
</code></transition><transition guard="" id="108" name="" sx="70" sy="35" x="-91" y="44"><code>	std::stringstream s;
	s &lt;&lt; var.x_origin;
	if (s.str() != var.x) {
		printf("Error");
	}
</code></transition><transition guard="" id="120" name="" sx="70" sy="35" x="206" y="-101"><code>	int sum = 0;
	ca::Token&lt;std::string&gt; *t = var.tokens.begin();
	for (int i = 0; i &lt; var.tokens_origins.size(); i++) {
		std::stringstream s;
		s &lt;&lt; var.tokens_origins[i];
		if (s.str() != t-&gt;value) {
			printf("Error\n");
		}
		sum += var.tokens_origins[i];
		t = var.tokens.next(t);
	}
	if (sum &gt; 0) {
	  printf("Ok\n");
	  fflush(stdout);
	  ctx.quit();
	}
</code></transition><area id="107" init-expr="[0;1;2]" name="" sx="123" sy="214" x="-385" y="-96" /></net></project>